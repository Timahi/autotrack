name: 'publish'

on:
  push:
    branches:
      - release

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: autotrack-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'AutoTrack v__VERSION__'
          releaseBody: "## Installation
            
            ### Windows (x64)
            
            1. Télécharger le fichier d'installation dans la section **Assets** terminant en `x64-setup.exe`.
            2. L'application n'étant pas signée pour des raisons budgétaires, un message d'alerte de sécurité est susceptible de s'afficher. Pour poursuivre, ce message doit être ignoré.
            
            ### MacOS
            
            1. Télécharger le fichier d'installation dans la section **Assets** terminant en `aarch64.dmg` ou `x64.dmg` correspondant à l'architecture de la machine.
            2. L'application n'étant pas signée pour des raisons budgétaires, elle ne sera pas exécutable. Pour poursuivre, ouvrir un Terminal dans le dossier d'installation de l'application puis saisir la commande :
            ```sh
            xattr -cr AutoTrack.app
            ```"
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}